<#@ template debug ="false" hostspecific = "false" language = "C#" #>
<#@ assembly name ="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension =".cs" #>
<#

List<uint> list = new List<uint>(255);

for (uint i = 1; i < 256; i++)
{
    list.Add(i+1);
}


#>
using System;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.X86;
using System.Runtime.Versioning;
using System.Text;

namespace Vulkan
{
    namespace Const
    {

        [RequiresPreviewFeatures(PreviewFeatureMessage, Url = PreviewFeatureUrl)]
        public interface IUInt
        {
            internal const string PreviewFeatureMessage = "Const.IUInt is in preview.";
            internal const string PreviewFeatureUrl     = "https://github.com/trmcnealy/Vulkan";

            static abstract uint Value { get; }
        }
    
    
<# foreach (uint value in list) { #>
        public struct UInt<#=value#> : IUInt
        {
            private const uint _value = <#=value#>;

            public static uint Value
            {
                [MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]
                get
                {
                    return _value;
                }
            }
        }

<# } #>
    }
}
